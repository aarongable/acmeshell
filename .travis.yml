language: go
go:
  - "stable"

install:
  # Install `golangci-lint` using their installer script
  - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.17.1
  - GO111MODULE=off go get -v github.com/letsencrypt/pebble/cmd/pebble
  - GO111MODULE=off go install -v github.com/letsencrypt/pebble/cmd/pebble
  - go install -v -mod=vendor ./...

before_script:
  # Start Pebble with the correct env & arguments for our tests
  - PEBBLE_WFE_NONCEREJECT=0 pebble -strict -dnsserver 127.0.0.1:5252 &
  # Wait for Pebble to become available before proceeding
  - until </dev/tcp/localhost/14000 ; do sleep 0.1 ; done

script:
  - set -e
  # Vet Go source code using the linter config (see .golang-ci.yml)
  - golangci-lint run
  - go test -v -mod=vendor ./...
  - go install -v -mod=vendor ./...
  - acmeshell -pebble -postAsGet -in docs/example.script.txt

deploy:
  - provider: script
    skip_cleanup: true
    script: curl -sL https://git.io/goreleaser | bash
    on:
      tags: true
      condition: $TRAVIS_OS_NAME = linux

  - provider: releases
    api_key: ${GITHUB_TOKEN}
    file: dist/acmeshell_*
    skip_cleanup: true
    overwrite: true
    file_glob: true
    on:
      tags: true
      condition: $TRAVIS_OS_NAME = linux
